%define debug_package %{nil}
%define _cabal_setup Setup.lhs
%define _no_haddock 0
%define module happy

Summary:	Happy is a parser generator for Haskell
Name:		ghc-%{module}
Version:	1.19.3
Release:	2
License:	BSD
Group:		Development/Other
Url:		https://hackage.haskell.org/package/%{module}
Source0:	http://hackage.haskell.org/packages/archive/%{module}/%{version}/%{module}-%{version}.tar.gz
Source10:	%{name}.rpmlintrc
BuildRequires:	ghc-devel
BuildRequires:	haskell-macros
BuildRequires:	haskell(mtl)
Requires(post,preun):	ghc
Requires(pre):	haskell(mtl)
Obsoletes:	%{module} < 1.19.3
Provides:	%{module} = %{EVRD}

%description
Happy is a parser generator system for Haskell, similar to the tool
`yacc' for C. Like `yacc', it takes a file containing an annotated BNF
specification of a grammar and produces a Haskell module containing a
parser for the grammar.

Happy is flexible: you can have several Happy parsers in the same
program, and several entry points to a single grammar. Happy can work
in conjunction with a lexical analyser supplied by the user (either
hand-written or generated by another program), or it can parse a
stream of characters directly (but this isn't practical in most
cases).

%files
%{_bindir}/%{module}
%{_datadir}/%{module}-%{version}
%{_docdir}/%{module}-%{version}
%{_cabal_rpm_deps_dir}
%{_cabal_haddoc_files}

#----------------------------------------------------------------------------

%prep
%setup -q -n %{module}-%{version}

%build
%_cabal_build

%install
%_cabal_install
%_cabal_rpm_gen_deps

